 
 /* Table creation commands */ 
 CREATE TABLE STUDENT ( STUDENT_ID int NOT NULL, FIRST_NAME varchar(20) NOT NULL, LAST_NAME varchar(20) NOT NULL, MAJOR varchar(20), PRIMARY KEY (STUDENT_ID) ); CREATE TABLE ENROLLMENT ( STUDENT_ID int NOT NULL, COURSE_ID int NOT NULL, PRIMARY KEY (STUDENT_ID, COURSE_ID) ); CREATE TABLE COURSES ( COURSE_ID int NOT NULL, DEPARTMENT varchar(20) NOT NULL, COURSE_NUMBER int NOT NULL, COURSE_NAME varchar(30) NOT NULL, YEAR int NOT NULL, SEMESTER varchar(10) NOT NULL, PRIMARY KEY (COURSE_ID) ); CREATE TABLE DISTRIBUTION ( DISTRIBUTION_ID int NOT NULL, COURSE_ID int NOT NULL, CATEGORY varchar(20) NOT NULL, DIST_PERCENT int NOT NULL, PRIMARY KEY (DISTRIBUTION_ID) ); CREATE TABLE ASSIGNMENT ( ASSIGNMENT_ID int NOT NULL, DISTRIBUTION_ID int NOT NULL, INSTANCE int NOT NULL, POINTS_POSSIBLE int NOT NULL, PRIMARY KEY (ASSIGNMENT_ID) ); CREATE TABLE GRADEBOOK ( STUDENT_ID int NOT NULL, ASSIGNMENT_ID int NOT NULL, GRADE_POINT int DEFAULT 0 NOT NULL, PRIMARY KEY (STUDENT_ID, ASSIGNMENT_ID) );
 
  
  /* Commands for Inserting Values */
   INSERT INTO STUDENT(STUDENT_ID, LAST_NAME, FIRST_NAME, MAJOR) VALUES (87643, 'Dewitt-Bukater', 'Rose', 'Computer Science'), (97525, 'Dawson', 'Jack', 'Sociology'), (75290, 'Lovett', 'Brock', 'History'), (23456, 'Quinones', 'Caledon', 'Linguistics'), (71521, 'Lawry', 'Mike', 'Biology');

INSERT INTO ENROLLMENT (STUDENT_ID, COURSE_ID) VALUES (87643, 1), (87643, 2), (87643, 3), (97525, 1), (97525, 2), (97525, 3), (75290, 1), (75290, 2),(75290, 3), (23456, 1), (23456, 2), (23456, 3), (71521, 1), (71521, 2), (71521, 3); 


INSERT INTO COURSES (COURSE_ID, DEPARTMENT, COURSE_NUMBER, COURSE_NAME, SEMESTER, YEAR) VALUES (1, 'Computer Science', 101, 'DATABASE', 'Spring', 2020), (2, 'Computer Science', 201, 'INTRO TO ROBOTICS', 'Spring', 2020), (3, 'English', 104, 'ENGLISH 104', 'Spring', 2020); 


INSERT INTO DISTRIBUTION (DISTRIBUTION_ID, COURSE_ID, CATEGORY, DIST_PERCENT) VALUES (1, 1, 'Homework', 24), (2, 1, 'Participation', 6), (3, 1, 'Test', 40), (4, 1, 'Project', 30); 


INSERT INTO ASSIGNMENT (ASSIGNMENT_ID, DISTRIBUTION_ID, INSTANCE, POINTS_POSSIBLE) VALUES (1, 1, 1, 100), (2, 1, 2, 100), (3, 1, 3, 100), (4, 1, 4, 100), (5, 2, 1, 10), (6, 3, 1, 100), (7, 3, 2, 100), (8, 4, 1, 100), (9, 4, 2, 100); 


INSERT INTO GRADEBOOK (STUDENT_ID, ASSIGNMENT_ID, GRADE_POINT) VALUES (87643, 1, 84), (87643, 2, 87), (87643, 3, 95), (87643, 4, 86), (87643, 5, 8), (87643, 6, 95), (87643, 7, 85), (87643, 8, 100), (87643, 9, 90), (97525, 1, 98), (97525, 2, 100), (97525, 3, 95), (97525, 4, 92), (97525, 5, 6), (97525, 6, 92), (97525, 7, 87), (97525, 8, 100), (97525, 9, 85), (75290, 1, 93), (75290, 2, 70), (75290, 3, 96), (75290, 4, 82), (75290, 5, 6), (75290, 6, 92), (75290, 7, 98), (75290, 8, 100), (75290, 9, 50),  (23456, 1, 100), (23456, 2, 76), (23456, 3, 99), (23456, 4, 80), (23456, 5, 9), (23456, 6, 92), (23456, 7, 88), (23456, 8, 92), (23456, 9, 71), (71521, 1, 78), (71521, 2, 90), (71521, 3, 91), (71521, 4, 85), (71521, 5, 10), (71521, 6, 90), (71521, 7, 88), (71521, 8, 92), (71521, 9, 100); 

/* SQL Queries*/ /* Commands to Display Tables */ 
SELECT * FROM STUDENT; SELECT * FROM ENROLLMENT; SELECT * FROM COURSES; SELECT * FROM DISTRIBUTION; SELECT * FROM ASSIGNMENT; SELECT * FROM GRADEBOOK; 

/* Computing the Average/Highest/Lowest Score of an Assignment */ 
SELECT AVG(GRADE_POINT) FROM GRADEBOOK WHERE ASSIGNMENT_ID = '1'; 
SELECT MAX(GRADE_POINT) FROM GRADEBOOK WHERE ASSIGNMENT_ID = '1'; 
SELECT MIN(GRADE_POINT) FROM GRADEBOOK WHERE ASSIGNMENT_ID = '1'; 

/* Listing all Students in a given course */ 
SELECT Last_NAME, FIRST_NAME FROM STUDENT WHERE STUDENT_ID IN ( SELECT STUDENT_ID FROM ENROLLMENT WHERE COURSE_ID = ( SELECT COURSE_ID FROM COURSES WHERE COURSE_NAME = "ENGLISH 104" ) );

/* Listing all students in a course and their respective scores on Assignments */ SELECT S.STUDENT_ID, S.LAST_NAME, S.FIRST_NAME, E.COURSE_ID, G.ASSIGNMENT_ID, G.GRADE_POINT FROM STUDENT S, ENROLLMENT E, GRADEBOOK G WHERE S.STUDENT_ID = G.STUDENT_ID AND G.STUDENT_ID = E.STUDENT_ID AND E.COURSE_ID = 3; 


/* Updating Schema */ /* Adding a new Assignment to a Course */
 INSERT INTO ASSIGNMENT (ASSIGNMENT_ID, DISTRIBUTION_ID, INSTANCE, POINTS_POSSIBLE) VALUES (10, 10, 8, 100); 

/* Changing percentage of categories for a given course */
 UPDATE DISTRIBUTION SET DIST_PERCENT = 30 WHERE CATEGORY = 'HW'; 

/* Adding 2 points to the score of each student on a given Assignment */
 UPDATE GRADEBOOK SET GRADE_POINT = GRADE_POINT + 2 WHERE ASSIGNMENT_ID = 2; 

/* Adding 2 points to only students whose last name contains a 'Q' */ 
UPDATE GRADEBOOK SET GRADE_POINT = GRADE_POINT + 2 WHERE GRADEBOOK.STUDENT_ID = (SELECT STUDENT_ID FROM STUDENT WHERE GRADEBOOK.STUDENT_ID = STUDENT.STUDENT_ID AND STUDENT.LAST_NAME LIKE '%Q%'); 
 
/* Computing grades for a student */ 
SELECT SUM((G.GRADE_POINT) * (D.DIST_PERCENT/C.COUNTER)/POINTS_POSSIBLE) AS FINAL_GRADE FROM GRADEBOOK G LEFT JOIN ASSIGNMENT A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G 
LEFT JOIN ASSIGNMENT A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID WHERE COURSE_ID=3 AND STUDENT_ID=71521 GROUP BY D.DISTRIBUTION_ID) C ON C.DISTRIBUTION_ID = D.DISTRIBUTION_ID WHERE COURSE_ID=3 AND STUDENT_ID=71521; 


/* Computing grades for a student - lowest score for a given is dropped */ SELECT SUM((G.GRADE_POINT) * (D.DIST_PERCENT/C.COUNTER)/POINTS_POSSIBLE) AS FINAL_GRADE FROM GRADEBOOK G LEFT JOIN ASSIGNMENT A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G 
LEFT JOIN ASSIGNMENT A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID WHERE COURSE_ID=3 AND STUDENT_ID=87643 GROUP BY D.DISTRIBUTION_ID) C ON C.DISTRIBUTION_ID = D.DISTRIBUTION_ID JOIN (SELECT D.DISTRIBUTION_ID, COUNT(*) AS COUNTER FROM GRADEBOOK G 
LEFT JOIN ASSIGNMENT A ON G.ASSIGNMENT_ID = A.ASSIGNMENT_ID JOIN DISTRIBUTION D ON D.DISTRIBUTION_ID = A.DISTRIBUTION_ID WHERE COURSE_ID=3 AND STUDENT_ID=87643 GROUP BY D.DISTRIBUTION_ID) Z ON Z.DISTRIBUTION_ID = D.DISTRIBUTION_ID WHERE COURSE_ID=3 AND STUDENT_ID=87643; 
/* PROGRAM END 

